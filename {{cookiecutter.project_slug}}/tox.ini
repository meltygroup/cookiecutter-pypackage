[tox]
envlist = py36,py37,black,pylint,bandit,mypy{% if cookiecutter.has_docs == "y" %},docs{% endif %}

[coverage:run]
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self\.debug
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == "__main__":

ignore_errors = False
fail_under = 100

[testenv]
extras = test
commands = pytest -v --capture=fd --cov-report term-missing --cov={envsitepackagesdir}/{{ cookiecutter.project_slug }} tests

[testenv:black]
{% if cookiecutter.project_type == "package" %}
commands = black --diff --check {{ cookiecutter.project_slug }}
{% else %}
commands = black --diff --check {{ cookiecutter.project_slug }}.py
{% endif %}

[testenv:pylint]
{% if cookiecutter.project_type == "package" %}
commands = pylint -rn {{ cookiecutter.project_slug }}
{% else %}
commands = pylint {{ cookiecutter.project_slug }}.py
{% endif %}

[testenv:bandit]
{% if cookiecutter.project_type == "package" %}
commands = bandit -r {{ cookiecutter.project_slug }}
{% else %}
commands = bandit {{ cookiecutter.project_slug }}.py
{% endif %}

[testenv:mypy]
{% if cookiecutter.project_type == "package" %}
commands = mypy --ignore-missing-imports {{ cookiecutter.project_slug }} tests
{% else %}
commands = mypy --ignore-missing-imports {{ cookiecutter.project_slug }}.py tests
{% endif %}

{% if cookiecutter.has_docs == "n" %}#{% endif %}[testenv:docs]
{% if cookiecutter.has_docs == "n" %}#{% endif %}deps = sphinx
{% if cookiecutter.has_docs == "n" %}#{% endif %}commands = sphinx-build -b html docs dist/docs
